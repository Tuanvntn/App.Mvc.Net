@using App.Models
@using Microsoft.EntityFrameworkCore
@using System.Data

@inject AppDbContext dbContext 

@{
    ViewData["Title"] = "Thong tin Db";
    var connect = dbContext.Database.GetDbConnection();
    var dbname = connect.Database;
    var can_connect = dbContext.Database.CanConnect();
    var appliedMigrations = dbContext.Database.GetAppliedMigrations().ToList();
    var pendingMigrations = dbContext.Database.GetPendingMigrations().ToList(); 

}
<partial name ="_AlertMessage"/>
<h1>thong tin ve co so du lieu</h1>
<p>- Database: @dbname</p>
<p>- Source: @connect.DataSource</p>
<p>- State: @connect.State</p>



<h2>Migrations</h2>

@foreach (var migration in appliedMigrations)
        {
            <p>@migration</p>
            <h3>Cac Table</h3>
            await dbContext.Database.OpenConnectionAsync();
            var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
            foreach (System.Data.DataRow row in table.Rows)
            {
                <li>@row["TABLE_Name"]</li>
            }
        }

@foreach (var migration in pendingMigrations)
        {
            <p>@migration (penting)</p>
        }

@if(!can_connect)
{
    <p class="alert alert-danger"> Khong co kha nang ket noi den Database</p>
}

@if(dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
    <button class="btn btn-danger" asp-action="Migrate">Tao Db (Cap nhat Migrations)</button>
    </form>
}


@if(can_connect)
{
    <h3>Cac Table</h3>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    foreach (System.Data.DataRow row in table.Rows)
    {
        <li>@row["TABLE_Name"]</li>
    }
    <a class="btn btn-danger" asp-action="DeleteDb">Xoa Database: @dbname</a>
}
@* @if (dbContext.Database.CanConnect())
{

    var appliedMigrations = dbContext.Database.GetAppliedMigrations().ToList();
    var pendingMigrations = dbContext.Database.GetPendingMigrations().ToList();

    
    if (appliedMigrations.Any())
    {
        foreach (var migration in appliedMigrations)
        {
            <p>@migration</p>
            <h3>Cac Table</h3>
            await dbContext.Database.OpenConnectionAsync();
            var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
            foreach (System.Data.DataRow row in table.Rows)
            {
                <li>@row["TABLE_Name"]</li>
            }
        }
    }
    else
    {
        <p>Chưa có migration nào được áp dụng.</p>
    }

    
}
else
{
    <p>❌ Không thể kết nối đến cơ sở dữ liệu.</p>
} *@
    
    


